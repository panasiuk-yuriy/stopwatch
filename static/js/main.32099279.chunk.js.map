{"version":3,"sources":["components/Display/Display.jsx","store/stopwatch.js","components/ControlButtons.jsx/ControlButtons.jsx","components/StopWatch/StopWatch.jsx","App.js","index.js"],"names":["Display","time","hours","minutes","seconds","Typography","variant","subject","Subject","initialState","state","counter","init","next","subscribe","setState","startTime","ref","current","setInterval","stopTime","clearInterval","clearTime","useStyles","makeStyles","button","width","ControlButtons","resetTime","doubleClickWait","isActive","isPaused","useRef","classes","ButtonGroup","color","size","Button","onClick","className","root","display","flexDirection","alignItems","box","marginTop","padding","margin","StopWatch","useState","counterState","setCounterState","setIsPaused","setIsActive","countClicks","setCountClicks","useEffect","Container","maxWidth","Paper","elevation","setTimeout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32099279.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst Display = ({ time: {hours,minutes, seconds }}) => {\n \n\n  return (\n      <Typography variant=\"h2\">\n        {hours <= 9 ? 0 : null}{hours}:\n        {minutes <= 9 ? 0 : null}{minutes}:\n        {seconds <= 9 ? 0 : null}{seconds}\n      </Typography>\n  );\n}\n\nexport default Display;","import { Subject } from 'rxjs';\n\nconst subject = new Subject();\n\nconst initialState = {\n  seconds: 0,\n  minutes: 0,\n  hours: 0,\n};\n\nlet state = initialState;\n\n\nconst counter = {\n  init: () => {\n    subject.next(state)\n  },\n  subscribe: setState => subject.subscribe(setState),\n  startTime: (ref) => {\n    ref.current = setInterval(() => {\n      if (state.minutes === 59 && state.seconds >= 59) {\n        state = {\n          minutes: 0,\n          seconds: 0,\n          hours: state.hours + 1\n        };\n      } else if (state.seconds >= 59) {\n        state = {\n          ...state,\n          minutes: state.minutes + 1,\n          seconds: 0,\n        }\n      } else {\n        state = {\n          ...state,\n          seconds: state.seconds + 1\n        };\n      }\n\n      subject.next(state);\n    }, 1000)\n  },\n\n  stopTime: (ref) => {\n    clearInterval(ref.current)\n  },\n\n  clearTime: (ref) => {\n    state = {\n      seconds: 0,\n      minutes: 0,\n      hours: 0,\n    };\n    clearInterval(ref.current)\n    subject.next(state);\n  },\n  initialState\n};\n\nexport default counter;","import React, { useRef } from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  button: {\n    width: 100,\n  },\n}));\n\nexport const ControlButtons = ({ stopTime, startTime, resetTime, doubleClickWait, isActive, isPaused }) => {\n  const ref = useRef()\n  const classes = useStyles();\n\n  return (\n    <ButtonGroup variant=\"contained\" color=\"primary\" size=\"large\">\n      {!isActive || isPaused \n        ? <Button onClick={() => startTime(ref)} className={classes.button}>Start </Button>\n        : <Button onClick={() => stopTime(ref)} className={classes.button}>Stop</Button>\n      }\n      <Button onClick={() => resetTime(ref)}>Reset</Button>\n      <Button onClick={() => doubleClickWait(ref)}>Wait</Button>\n    </ButtonGroup>\n  )\n};\n\n","import  React, { useState, useEffect } from  \"react\";\nimport Display from '../Display/Display';\nimport counter from '../../store/stopwatch';\nimport { ControlButtons } from \"../ControlButtons.jsx/ControlButtons\";\nimport { Paper, Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  box: {\n    marginTop: '5rem',\n    width: 'max-content',\n    padding: 10,\n    margin: '0 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n}));\n\nexport const StopWatch = () => {\n  const classes = useStyles();\n  const [counterState, setCounterState] = useState(counter.initialState);\n  const [isPaused, setIsPaused] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n  const [countClicks, setCountClicks] = useState(0)\n\n\n  useEffect(()=> {\n    counter.subscribe(setCounterState);\n    counter.init();\n  },[]);\n\n  const handleStartTime = (ref) => { \n    if (isActive){\n      return\n    }\n    setIsActive(true)\n    setIsPaused(false)\n    counter.startTime(ref)\n  }\n\n  const handleStopTime = (ref) => {\n      counter.stopTime(ref)\n      setIsPaused(true)\n      setIsActive(false)\n      counter.clearTime(ref)\n  }\n\n  const handleResetTime = (ref) => {\n    setIsPaused(false)\n    setIsActive(true)\n    counter.clearTime(ref)\n    counter.startTime(ref)\n  }\n\n  const handleDoubleClick = (ref) => {\n    setCountClicks(countClicks + 1)\n    if (countClicks >= 1 && countClicks <= 2) {\n      counter.stopTime(ref)\n      setIsPaused(true)\n      setIsActive(false)\n    }\n    setTimeout(() => setCountClicks(0), 300)\n  }\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.root}>\n      <Typography variant=\"h2\">Stopwatch</Typography>\n      <Paper className={classes.box} elevation={3}>\n        <Display time = {counterState} />\n        <ControlButtons \n          startTime={handleStartTime} \n          stopTime={handleStopTime} \n          resetTime={handleResetTime}\n          doubleClickWait={handleDoubleClick} \n          isPaused={isPaused}\n          isActive={isActive}\n        />\n      </Paper>\n    </Container>\n  );\n}\n\nexport default StopWatch;","import React from 'react';\nimport StopWatch from './components/StopWatch/StopWatch';\n\n\nconst App = () => (\n  <div>\n    <StopWatch />\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}